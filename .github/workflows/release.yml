name: Build and Release

on:
  push:
    branches:
      - master  # This triggers the workflow on pushes to the master branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history to ensure tags are included

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Specify the Node.js version

      - name: Install dependencies
        run: npm install --ignore-scripts

      - name: Run custom build script
        run: npm run build:esbuild && npm run build:tsc

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment tag version
        id: increment_tag
        run: |
          LATEST_TAG=${{ env.LATEST_TAG }}
          if [[ "$LATEST_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            IFS='.' read -r -a parts <<< "${LATEST_TAG:1}"
            parts[2]=$((parts[2]+1))
            NEW_TAG="v${parts[0]}.${parts[1]}.${parts[2]}"
          else
            NEW_TAG="v1.0.0"
          fi
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create new tag
        run: |
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
          body: |
            Automatic release for changes to master branch.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload dist files to release
        run: |
          for file in $(find dist -type f); do
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Content-Type: $(file --mime-type -b $file)" \
                 --data-binary @$file \
                 "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$(basename $file)"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload README to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/markdown
